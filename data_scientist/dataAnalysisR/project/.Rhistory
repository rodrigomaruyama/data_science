setwd("D://Documents/ead/Udacity/dsNanodegree/dataAnalysisR/project/")
setwd("D://Documents/ead/Udacity/dsNanodegree/dataAnalysisR/project/")
library(ROCR)
library(ggfortify)
library(ggplot2)
library(knitr)
library(dplyr)
library(GGally)
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(corrplot)
library(grid)
library(lattice)
library(e1071)
library(rpart)
library(randomForest)
library(knitr)
library(markdown)
library(htmlTable)
# Load the Data
wdf <- read.csv('data/wineQualityWhites.csv')
# Find the outliers based in the 1.5*IQR value
outliers <- data.frame()
for (f in names(wdf[2, -12])) {
q1 <- as.numeric(quantile(wdf[, f], 0.25))
q3 <- as.numeric(quantile(wdf[, f], 0.75))
step <- 1.5*(q3 - q1)
outliers <- rbind(outliers,
subset(wdf, (wdf[, f] <= (q1 - step)) | (wdf[, f] >= (q3 + step))))
}
# Just getting the outliers in more than one feature
outliers <- outliers[duplicated(outliers), ]
dim(outliers)
# Removing the outliers from the dataset
wdf.outliers <- anti_join(wdf, outliers)
wdf.outliers$X <- NULL
wdf.outliers$quality <- as.factor(wdf.outliers$quality)
# Creating Train.outliers and Test.outliers datasets
set.seed(13)
samp <- sample(nrow(wdf.outliers), 0.4 * nrow(wdf.outliers))
train.outliers <- wdf.outliers[samp, ]
test.outliers <- wdf.outliers[-samp, ]
# Random Forest Raw
model <- randomForest(quality ~ . - quality, data = train.outliers)
rf.pred <- predict(model, newdata = test.outliers[, -12], type = 'response')
pred <- prediction(rf.pred, test.outliers$quality)
rf.pred <- predict(model, newdata = test.outliers[, -12], type = 'prob')
pred <- prediction(rf.pred, test.outliers$quality)
sumarry
summary(rf.pred)
rf.pred <- predict(model, newdata = test.outliers[, -12])
rf.pred.prob <- predict(model, newdata = test.outliers[, -12], type = 'prob')
if(rf.pred == test.outliers$quality, bin.pred = 1, bin.pred = 0)
bin.pred <- if(rf.pred == test.outliers$quality, 1, 0)
test.outliers$quality[0]
test.outliers$quality[1]
test.outliers$quality[1] == rf.pred[1]
length(test.outliers$quality)
length(rf.pred)
rf.pred <- as.factor(rf.pred)
test.outliers$quality <- as.factor(test.outliers$quality)
for (a in length(rf.pred)) {
print(a)
}
for (a in rf.pred) {
print(a)
}
s <- length(rf.pred)
a <- 0
while (s >= 0) {
if (rf.pred[a] == test.outliers$quality) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
s <- length(rf.pred)
a <- 0
while (s >= 0) {
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
s <- length(rf.pred)
a <- 0
while (s >= 0) {
print(rf.pred[a])
print(test.outliers$quality[a])
#    if (rf.pred[a] == test.outliers$quality[a]) {
#    bin.pred[a] == 1
#  } else {
#    bin.pred[a] == 0
#  }
}
# Random Forest Raw
model <- randomForest(quality ~ . - quality, data = train.outliers)
rf.pred <- predict(model, newdata = test.outliers[, -12])
rf.pred.prob <- predict(model, newdata = test.outliers[, -12], type = 'prob')
rf.pred <- as.numeric(rf.pred)
test.outliers$quality <- as.numeric(test.outliers$quality)
s <- length(rf.pred)
a <- 0
a <- 0
while (a <= 10) {
print(rf.pred[a])
print(test.outliers$quality)
a <- a + 1
#    if (rf.pred[a] == test.outliers$quality[a]) {
#    bin.pred[a] == 1
#  } else {
#    bin.pred[a] == 0
#  }
}
a <- 0
while (a <= 10) {
print(rf.pred[a])
print(test.outliers$quality[a])
a <- a + 1
#    if (rf.pred[a] == test.outliers$quality[a]) {
#    bin.pred[a] == 1
#  } else {
#    bin.pred[a] == 0
#  }
}
a <- 0
a <- 0
while (a <= 10) {
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
a <- a + 1
#    if (rf.pred[a] == test.outliers$quality[a]) {
#    bin.pred[a] == 1
#  } else {
#    bin.pred[a] == 0
#  }
}
a <- 0
while (a <= 10) {
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
a <- 0
bin.pred <- data.frame()
while (a <= 10) {
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
a <- 0
bin.pred <- as.numeric(bin.pred)
while (a <= 10) {
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
str(rf.pred)
a <- 0
bin.pred <- as.vector()
bin.pred <- as.vector(bin.pred)
a <- 0
bin.pred <- as.vector(bin.pred)
while (a <= 10) {
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
} else {
bin.pred[a] == 0
}
}
a <- 0
bin.pred <- as.vector(bin.pred)
while (a <= 10) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] == 0
}
}
bin.pred <- c(1:2819)
length(bin.pred)
bin.pred[1]
bin.pred[2]
bin.pred[3]
a <- 0
bin.pred <- <- c(1:2819)
a <- 0
bin.pred <- c(1:2819)
while (a <= 10) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] == 0
}
}
a <- 0
bin.pred <- c(1:2819)
while (a <= 10) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] == 1
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] == 0
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
rf.pred[0]
rf.pred[1]
rf.pred[2]
rf.pred[3]
rf.pred[4]
a <- 0
bin.pred <- c(1:2819)
while (a <= 10) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] <- 1
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] <- 0
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
s <- length(rf.pred)
a <- 0
bin.pred <- c(1:2819)
while (a <= s) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] <- 1
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] <- 0
print(paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
rf.pred[0]
rf.pred[1]
rf.pred[2]
rf.pred[3]
rf.pred[4]
test.outliers$quality[0]
test.outliers$quality[1]
test.outliers$quality[2]
test.outliers$quality[3]
test.outliers$quality[4]
test.outliers$quality[4]
test.outliers$quality[6]
s <- length(rf.pred)
a <- 0
bin.pred <- c(1:2819)
while (a <= s) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] <- 1
print('TRUE', a, paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] <- 0
print('FALSE', a, paste(rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
s <- length(rf.pred)
a <- 0
bin.pred <- c(1:2819)
while (a <= s) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] <- 1
print(paste('TRUE', a, rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] <- 0
print(paste('FALSE', a, rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
s <- length(rf.pred)
a <- 0
bin.pred <- c(1:2819)
while (a < s) {
a <- a + 1
if (rf.pred[a] == test.outliers$quality[a]) {
bin.pred[a] <- 1
print(paste('TRUE', a, rf.pred[a], test.outliers$quality[a], sep = '--'))
} else {
bin.pred[a] <- 0
print(paste('FALSE', a, rf.pred[a], test.outliers$quality[a], sep = '--'))
}
}
bin.pred[2819]
pred <- prediction(rf.pred.prob, bin.pred)
rf.pred.prob <- predict(model, newdata = test.outliers[, -12], type = 'prob')
pred <- prediction(rf.pred.prob, bin.pred)
pred <- prediction(rf.pred.prob, bin.pred)
? prediction
pred <- prediction(rf.pred, test.outliers$quality)
bin.pred
rf.pred
pred <- prediction(rf.pred.prob, bin.pred)
pred <- prediction(rf.pred, test.outliers$quality)
